/* Generated by Yosys 0.33 (git sha1 2584903a060) */

module CSkipA_16b(\a~4 , \a~0 , \a~1 , \a~2 , \a~3 , \a~5 , \a~8 , \a~6 , \a~7 , \b~0 , \b~1 , \b~2 , \b~3 , \b~4 , \b~5 , \a~15 , \a~14 , \b~13 , \b~12 , \b~11 , \b~10 
, \b~9 , \b~8 , \b~7 , \b~6 , rst, clk, \b~15 , \b~14 , \a~9 , \a~10 , \a~11 , \a~12 , \a~13 , \sum~13 , \sum~14 , \sum~15 , cout, \sum~3 , \sum~2 , \sum~1 , \sum~0 
, \sum~11 , \sum~10 , \sum~9 , \sum~8 , \sum~7 , \sum~6 , \sum~5 , \sum~4 , \sum~12 );
  input \a~0 ;
  wire \a~0 ;
  input \a~1 ;
  wire \a~1 ;
  input \a~10 ;
  wire \a~10 ;
  input \a~11 ;
  wire \a~11 ;
  input \a~12 ;
  wire \a~12 ;
  input \a~13 ;
  wire \a~13 ;
  input \a~14 ;
  wire \a~14 ;
  input \a~15 ;
  wire \a~15 ;
  input \a~2 ;
  wire \a~2 ;
  input \a~3 ;
  wire \a~3 ;
  input \a~4 ;
  wire \a~4 ;
  input \a~5 ;
  wire \a~5 ;
  input \a~6 ;
  wire \a~6 ;
  input \a~7 ;
  wire \a~7 ;
  input \a~8 ;
  wire \a~8 ;
  input \a~9 ;
  wire \a~9 ;
  input \b~0 ;
  wire \b~0 ;
  input \b~1 ;
  wire \b~1 ;
  input \b~10 ;
  wire \b~10 ;
  input \b~11 ;
  wire \b~11 ;
  input \b~12 ;
  wire \b~12 ;
  input \b~13 ;
  wire \b~13 ;
  input \b~14 ;
  wire \b~14 ;
  input \b~15 ;
  wire \b~15 ;
  input \b~2 ;
  wire \b~2 ;
  input \b~3 ;
  wire \b~3 ;
  input \b~4 ;
  wire \b~4 ;
  input \b~5 ;
  wire \b~5 ;
  input \b~6 ;
  wire \b~6 ;
  input \b~7 ;
  wire \b~7 ;
  input \b~8 ;
  wire \b~8 ;
  input \b~9 ;
  wire \b~9 ;
  input clk;
  wire clk;
  output cout;
  reg cout;
  wire n104;
  wire n108;
  wire n112;
  wire n116;
  wire n120;
  wire n124;
  wire n128;
  wire n132;
  wire n136;
  wire n140;
  wire n144;
  wire n148;
  wire n152;
  wire n156;
  wire n160;
  wire n164;
  wire n168;
  wire new_new_n108_1;
  wire new_new_n110;
  wire new_new_n113;
  wire new_new_n115_1;
  wire new_new_n116_1;
  wire new_new_n117;
  wire new_new_n119_1;
  wire new_new_n121;
  wire new_new_n123_1;
  wire new_new_n126;
  wire new_new_n127_1;
  wire new_new_n128_1;
  wire new_new_n129;
  wire new_new_n132_1;
  wire new_new_n135_1;
  input rst;
  wire rst;
  output \sum~0 ;
  reg \sum~0 ;
  output \sum~1 ;
  reg \sum~1 ;
  output \sum~10 ;
  reg \sum~10 ;
  output \sum~11 ;
  reg \sum~11 ;
  output \sum~12 ;
  reg \sum~12 ;
  output \sum~13 ;
  reg \sum~13 ;
  output \sum~14 ;
  reg \sum~14 ;
  output \sum~15 ;
  reg \sum~15 ;
  output \sum~2 ;
  reg \sum~2 ;
  output \sum~3 ;
  reg \sum~3 ;
  output \sum~4 ;
  reg \sum~4 ;
  output \sum~5 ;
  reg \sum~5 ;
  output \sum~6 ;
  reg \sum~6 ;
  output \sum~7 ;
  reg \sum~7 ;
  output \sum~8 ;
  reg \sum~8 ;
  output \sum~9 ;
  reg \sum~9 ;
  always @(posedge clk)
    \sum~0  <= n104;
  always @(posedge clk)
    \sum~9  <= n140;
  always @(posedge clk)
    \sum~10  <= n144;
  always @(posedge clk)
    \sum~11  <= n148;
  always @(posedge clk)
    \sum~12  <= n152;
  always @(posedge clk)
    \sum~13  <= n156;
  always @(posedge clk)
    \sum~14  <= n160;
  always @(posedge clk)
    \sum~15  <= n164;
  always @(posedge clk)
    cout <= n168;
  always @(posedge clk)
    \sum~1  <= n108;
  always @(posedge clk)
    \sum~2  <= n112;
  always @(posedge clk)
    \sum~3  <= n116;
  always @(posedge clk)
    \sum~4  <= n120;
  always @(posedge clk)
    \sum~5  <= n124;
  always @(posedge clk)
    \sum~6  <= n128;
  always @(posedge clk)
    \sum~7  <= n132;
  always @(posedge clk)
    \sum~8  <= n136;
  assign n104 = 8'h14 >> { \b~0 , \a~0 , rst };
  assign n108 = 32'd134678280 >> { \b~1 , \a~1 , rst, \b~0 , \a~0  };
  assign n112 = 16'h1441 >> { \b~2 , \a~2 , new_new_n108_1, rst };
  assign new_new_n108_1 = 16'h1777 >> { \a~0 , \b~0 , \b~1 , \a~1  };
  assign n116 = 16'h1441 >> { \b~3 , \a~3 , new_new_n110, rst };
  assign new_new_n110 = 64'h0317173f173f173f >> { \a~0 , \b~0 , \b~1 , \b~2 , \a~2 , \a~1  };
  assign n120 = 64'h00d4002b002b00d4 >> { \b~4 , \a~4 , rst, \b~3 , \a~3 , new_new_n110 };
  assign n124 = 16'h1441 >> { \b~5 , \a~5 , new_new_n113, rst };
  assign new_new_n113 = 32'd53160767 >> { \b~3 , \a~3 , \b~4 , \a~4 , new_new_n110 };
  assign n128 = 32'd234946830 >> { \b~6 , \a~6 , rst, new_new_n117, new_new_n115_1 };
  assign new_new_n115_1 = 64'hfcd4d4c000000000 >> { new_new_n116_1, \b~3 , \a~3 , \b~4 , \a~4 , new_new_n110 };
  assign new_new_n116_1 = 4'h6 >> { \b~5 , \a~5  };
  assign new_new_n117 = 4'h8 >> { \b~5 , \a~5  };
  assign n132 = 16'h1441 >> { \b~7 , \a~7 , new_new_n119_1, rst };
  assign new_new_n119_1 = 16'h1117 >> { new_new_n117, new_new_n115_1, \b~6 , \a~6  };
  assign n136 = 16'h1441 >> { \b~8 , \a~8 , new_new_n121, rst };
  assign new_new_n121 = 64'h031703170317173f >> { new_new_n117, new_new_n115_1, \b~6 , \b~7 , \a~7 , \a~6  };
  assign n140 = 16'h1441 >> { \a~9 , \b~9 , new_new_n123_1, rst };
  assign new_new_n123_1 = 8'h2b >> { \b~8 , \a~8 , new_new_n121 };
  assign n144 = 64'h00d4002b002b00d4 >> { \a~10 , \b~10 , rst, \a~9 , \b~9 , new_new_n123_1 };
  assign n148 = 16'h1441 >> { \a~11 , \b~11 , new_new_n126, rst };
  assign new_new_n126 = 4'h1 >> { new_new_n129, new_new_n127_1 };
  assign new_new_n127_1 = 64'hfcd4d4c000000000 >> { new_new_n128_1, \b~8 , \a~8 , \a~9 , \b~9 , new_new_n121 };
  assign new_new_n128_1 = 4'h6 >> { \a~10 , \b~10  };
  assign new_new_n129 = 4'h8 >> { \a~10 , \b~10  };
  assign n152 = 64'h00d4002b002b00d4 >> { \a~12 , \b~12 , rst, \a~11 , \b~11 , new_new_n126 };
  assign n156 = 16'h1441 >> { \a~13 , \b~13 , new_new_n132_1, rst };
  assign new_new_n132_1 = 64'h015701570157157f >> { new_new_n129, new_new_n127_1, \a~12 , \a~11 , \b~11 , \b~12  };
  assign n160 = 64'h00d4002b002b00d4 >> { \b~14 , \a~14 , rst, \a~13 , \b~13 , new_new_n132_1 };
  assign n164 = 16'h1441 >> { \b~15 , \a~15 , new_new_n135_1, rst };
  assign new_new_n135_1 = 32'd53160767 >> { \a~13 , \b~13 , \b~14 , \a~14 , new_new_n132_1 };
  assign n168 = 16'h00d4 >> { rst, \b~15 , \a~15 , new_new_n135_1 };
endmodule
